@model SAWorkplace.Models.RequestEditModel
@using System.Text.RegularExpressions

<script>
    $(document).ready(function () {
        $('#txtDescription').trumbowyg({
            btns: [
                ['formatting'],
                ['strong'],
                ['emphasis'],
                ['link'],
                ['insertImage'],
                ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],
                ['unorderedList', 'orderedList'],
                ['horizontalRule'],
                ['fullscreen'],
                ['foreColor']
            ]
        });
        var dateToday = new Date();
        dateToday.setDate(dateToday.getDate() + 2);
        //$("body select").msDropDown();
        $('#dcTestTime').datetimepicker(
            {
                format: 'm/d/Y H:i',
                formatTime: 'H:i',
                minDate: dateToday,
                beforeShowDay: function(date){ return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5,""]}}
        );

        $('#dcRequestReviewDate').datetimepicker(
            {
                format: 'm/d/Y',
                step: 60,
                timepicker: false,
                minDate: dateToday,
                beforeShowDay: function(date){ return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5,""]}}
        );
        $('#dcIssueDate').datetimepicker(
            {
                format: 'm/d/Y',
                step: 60,
                timepicker: false,
                minDate: dateToday,
                beforeShowDay: function(date){ return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5,""]}}
        );

         $('#dcFeaReviewDate').datetimepicker(
            {
                format: 'm/d/Y',
                step: 60,
                timepicker: false,
                minDate: dateToday,
                beforeShowDay: function(date){ return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5,""]}}
        );

        $('#frmRequest').submit(function (e) {

            var formData = new FormData(this);

            $('input[name="Questionaire"]').each(function(a, b) {
            var fileInput = $('input[name="Questionaire"]')[a];
            if (fileInput.files.length > 0) {
                var file = fileInput.files[0];
                formData.append("Questionaire", file);
            }
        });

        $.ajax({
            url: '@Url.Action("AddRequest", "Home")',
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,
            success: function (result) {
                if (result.success == true) {
                    $('#errMessage').attr('class', 'hidden ui-state-error ui-corner-all');
                   $('#myModal').modal('hide');
                    window.location.reload();
                }
                else if (result.success == false) {
                        $('#errMessage').html("");
                        $('#errMessage').attr('class', 'ui-state-error ui-corner-all');
                        $('<div><p style="margin-top: 8px;"><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .5em;  margin-top: 2px;"></span>Please fill out all required fields</p></div>').appendTo('#errMessage');
                }
            },
            error: function (result) {
                document.write(result.responseText);
                $('#errMessage').attr('class', 'ui-state-error ui-corner-all');
                $('errMessage').val = result.responseText;
            }
        });
        e.preventDefault();
        });

        $('#Questionaire').on('change', function () {
            //get the file name
            var fileName = $(this).val();
            //replace the "Choose a file" label
            fileName = fileName.substring(fileName.lastIndexOf("\\") + 1, fileName.length);
            $(this).next('#questionaireLabel').html(fileName);
        });

        if (@Model.Requests.RequestType != "") { changeDisplay(@Model.Requests.RequestType)}
    });
    function changeDisplay(requestType) {
        if (requestType == '1') {
            $('#WebService_CodeReview').removeClass('hide');
            $('#WebService_CodeReview').addClass('show');
            $('#WebService_LoadTest').removeClass('show');
            $('#WebService_LoadTest').addClass('hide');
            $('#SARequest').removeClass('show');
            $('#SARequest').addClass('hide');
            $('#Request_Issue_Add').removeClass('show');
            $('#Request_Issue_Add').addClass('hide');
            $('#lblDescription').text('Description of Request');
            $('#Questionaire').removeAttr('required');
        }
        else if (requestType == '2') {
            $('#WebService_CodeReview').removeClass('show');
            $('#WebService_CodeReview').addClass('hide');
            $('#WebService_LoadTest').removeClass('hide');
            $('#WebService_LoadTest').addClass('show');
            $('#SARequest').removeClass('show');
            $('#SARequest').addClass('hide');
            $('#Request_Issue_Add').removeClass('show');
            $('#Request_Issue_Add').addClass('hide');
            $('#lblDescription').text('Description of Request');
            $('#Questionaire').removeAttr('required');
        }
        else if (requestType == '3') {
            $('#WebService_CodeReview').removeClass('show');
            $('#WebService_CodeReview').addClass('hide');
            $('#WebService_LoadTest').addClass('hide');
            $('#WebService_LoadTest').removeClass('show');
            $('#SARequest').removeClass('show');
            $('#SARequest').addClass('hide');
            $('#Request_Issue_Add').removeClass('hide');
            $('#Request_Issue_Add').addClass('show');
            $('#lblDescription').text('Description of Request');
            $('#Questionaire').removeAttr('required');
        }
        else if (requestType == '4') {
            $('#WebService_CodeReview').removeClass('show');
            $('#WebService_CodeReview').addClass('hide');
            $('#WebService_LoadTest').removeClass('show');
            $('#WebService_LoadTest').addClass('hide');
            $('#SARequest').removeClass('hide');
            $('#SARequest').addClass('show');
            $('#Request_Issue_Add').removeClass('show');
            $('#Request_Issue_Add').addClass('hide');
            $('#Questionaire').prop('required',true);
            $('#lblDescription').text('Description of Request');
        }
        else if (requestType == '5') {
            $('#WebService_CodeReview').removeClass('show');
            $('#WebService_CodeReview').addClass('hide');
            $('#WebService_LoadTest').removeClass('show');
            $('#WebService_LoadTest').addClass('hide');
            $('#SARequest').removeClass('show');
            $('#SARequest').addClass('hide');
            $('#Request_Issue_Add').removeClass('show');
            $('#Request_Issue_Add').addClass('hide');
            $('#lblDescription').text('Description of Concern');
            $('#Questionaire').removeAttr('required');
        }
        else {
            $('#WebService_CodeReview').removeClass('show');
            $('#WebService_CodeReview').addClass('hide');
            $('#WebService_LoadTest').removeClass('show');
            $('#WebService_LoadTest').addClass('hide');
            $('#SARequest').removeClass('show');
            $('#SARequest').addClass('hide');
            $('#Request_Issue_Add').removeClass('show');
            $('#Request_Issue_Add').addClass('hide');
            $('#lblDescription').text('Description of Request');
            $('#Questionaire').removeAttr('required');
        }
    };
</script>

@Html.HiddenFor(model => model.Requests.RequestId)
<div class="row">
    <div class="form-group col-6">
        <label for="Requests_ProjectName" class="col-form-label-sm">Project/Request Name</label>
        <div class="input-group input-group-sm mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">class</i></span>
            </div>
            @Html.EditorFor(model => model.Requests.ProjectName, new { htmlAttributes = new { @class = "form-control", required = "required", autocomplete="off" } })
            <span class="icon-validation" data-icon="&#xe000"></span>
        </div>
    </div>
    <div class="form-group col-6">
        <label for="Requests_CarrierId" class="col-form-label-sm">Carrier</label>
        <div class="input-group input-group-sm mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">account_balance</i></span>
            </div>
            @Html.DropDownListFor(model => model.Requests.CarrierId, new SelectList(Model.Carriers, "CarrierId", "CarrierName"), "--Choose Carrier--", new { @class = "form-control", required="required",autocomplete="off" })
            @*<select name="@Html.NameFor(x=>x.Requests.CarrierId)" id="@Html.IdFor(x=>x.Requests.CarrierId)" class="form-control" required>
                        <option value="">--Choose Carrier--</option>
                        @foreach (var carrier in Model.Carriers)
                        {
                            <option value="@carrier.CarrierId" data-imagecss="ddLogo" data-image="@carrier.CarrierLogo">@carrier.CarrierName</option>
                        }
                    </select>*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-6">
                <label for="Requests_RequestType" class="col-form-label-sm">Request Type</label>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">dynamic_feed</i></span>
                    </div>
                    @Html.DropDownListFor(model => model.Requests.RequestType, new SelectList(Model.RequestTypes, "RequestType", "RequestName"), "--Choose Request Type--", new { @class = "form-control", @onchange="changeDisplay(this.value);", required="required",autocomplete="off" })
                </div>
            </div>
            <div class="form-group col-6">
                <label for="Requests_ProjectName" class="col-form-label-sm">Projector Code</label>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">home_work</i></span>
                    </div>
                    @Html.EditorFor(model => model.Requests.ProjectorCode, new { htmlAttributes = new { @class = "form-control", required="required",autocomplete="off" } })
                </div>
            </div>
        </div>
        <div id="WebService_CodeReview" class="hide">
            <div class="row">
                <div class="form-group col-6">
                    <label for="Requests_TFSPath" class="col-form-label-sm">TFS Path</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">list</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.TFSPath, new { htmlAttributes = new { @class = "form-control",autocomplete="off" } })
                    </div>
                </div>
                <div class="form-group col-6">
                    <label for="Requests_RequestReviewDate" class="col-form-label-sm">Requested Due Date</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">av_timer</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.RequestReviewDate, new { htmlAttributes = new { @class = "form-control", @id="dcRequestReviewDate",@type="text",autocomplete="off" } })
                    </div>
                </div>
            </div>
        </div>
        <div id="WebService_LoadTest" class="hide">
            <div class="row">
                <div class="form-group col-6">
                    <label for="Requests_WebServiceURLs" class="col-form-label-sm">Web Service URLs</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">http</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.WebServiceURLs, new { htmlAttributes = new { @class = "form-control",autocomplete="off" } })
                    </div>
                </div>
                <div class="form-group col-6">
                    <label for="Requests_TestTime" class="col-form-label-sm">Preferred Test Time</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">av_timer</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.TestTime, new { htmlAttributes = new { @class = "form-control", @id="dcTestTime",@type="text",@autocomplete="off" } })
                    </div>
                </div>
            </div>
        </div>
        <div id="Request_Issue_Add" class="hide">
            <div class="row">
                <div class="form-group col-6">
                    <label for="Requests_IssueReviewDate" class="col-form-label-sm">Requested Due Date</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">av_timer</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.IssueReviewDate, new { htmlAttributes = new { @class = "form-control", @id = "dcIssueDate", @type = "text",autocomplete="off" } })
                    </div>
                </div>
            </div>
        </div>
        <div id="SARequest" class="hide">
            <div class="row">
                <div class="form-group col-6">
                    <label class="col-form-label-sm">Questionaire</label>
                    <div class="custom-file">
                        <input type="file" id="Questionaire" name="Questionaire" class="custom-file-input" accept=".docx" placeholder="Please choose your Questionaire...">
                        <label class="custom-file-label" id="questionaireLabel" name="questionaireLabel" for="CSD">Please Upload your Completed Questionaire</label>
                    </div>
                </div>
                <div class="form-group col-6">
                    <label for="Requests_FeasibilityReviewDate" class="col-form-label-sm">Requested Review Date</label>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="material-icons md-18">av_timer</i></span>
                        </div>
                        @Html.EditorFor(model => model.Requests.FeasibilityReviewDate, new { htmlAttributes = new { @class = "form-control", @id = "dcFeaReviewDate", @type = "text",autocomplete="off" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-12">
                <label for="Requests_RequestDesc" class="col-form-label-sm" id="lblDescription">Description of Request</label>
                @Html.TextAreaFor(model => model.Requests.RequestDesc, new { @class = "form-control", @id = "txtDescription",autocomplete="off" })
            </div>
        </div>

