@model SAWorkplace.Models.FeasibilityReviewModel
@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Http;

<script>
    $(document).ready(function () {
        var dateToday = new Date();
        dateToday.setDate(dateToday.getDate());
        $('#dcInitReviewDate').datetimepicker(
            {
                format: 'm/d/Y',
                step: 60,
                timepicker: false,
                minDate: dateToday,
                beforeShowDay: function (date) { return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5, ""] },
                value: dateToday
            }
        );


        if ('@Model.Init_Workflow' != "No") {
            $('#Init_WorkflowDetail').hide();
            $('#lblInit_WorkflowDetail').hide();
        }
        if ('@Model.Init_POCResults' != "Yes") {
            $('#Init_POCResultsDetail').hide();
            $('#lblInit_POCResultsDetail').hide();
        }
        if ('@Model.Init_IPProduct' != "Yes") {
            $('#Init_IPProductDetail').hide();
            $('#lblInit_IPProductDetail').hide();
        }


        @*var reviewDate = '@Model.Init_ReviewDate';
        console.log(reviewDate);
        if (reviewDate == "") {
            var today = new Date();
            var val = today.getMonth() + "/" + today.getDate() + "/" + today.getFullYear();
            console.log(val);
            $('#Init_ReviewDate').val(val);
        }*@


        var viewType = '@Context.Session.GetString("ViewType")';
        console.log("viewType =" + viewType)

        if (viewType != "Admin") {
            $("#frmInitiationForm :input").prop("disabled", true);
            $("#InitFormClose").prop("disabled", false);
            $("#InitFormButton").prop("disabled", false);
        }

    });

        $('#frmInitiationForm').submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);

            $.ajax({
                url: '@Url.Action("InitiationForm", "Feasibility")',
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: formData,
                contentType: false,
                processData: false,
                success: function (result) {
                        if (result.success == true) {
                            scrollTo(0, 0);
                            setTimeout(top.location.href = '/Feasibility/EditFeasibility?ticketNum=' + result.ticketNum, 1000);
                            //setTimeout(top.location.href = '/', 500);
                        }
                    },
                error: function (result) {
                        console.log(result.responseText);
                    }
                });
                return false;
            });

</script>

@Html.HiddenFor(model => model.ID)
@Html.HiddenFor(model => model.TicketNumber)
@Html.HiddenFor(model => model.ProjectName)
@Html.HiddenFor(model => model.TeamMembers)

<div class="two fields">
    <div class="eight wide field">
        <label for="Init_ReviewDate">Review Date(s)</label>
        <div class="ui labeled input">
            <label for="Init_ReviewDate" class="ui ltgray label"><i class="icon calendar alternate"></i></label>
            @Html.EditorFor(model => model.Init_ReviewDate, new { htmlAttributes = new { @class = "form-control", required = "required", autocomplete = "off" } })
        </div>
    </div>

    <div class="eight wide field">
        <label for="Init_ReviewedBy">Reviewed By</label>
        <div class="ui labeled input">
            <label for="Init_ReviewedBy" class="ui ltgray label"><i class="icon user md"></i></label>
            @Html.EditorFor(model => model.Init_ReviewedBy, new { htmlAttributes = new { @class = "form-control", required = "required", autocomplete = "off" } })
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">Is there a finalized workflow?</label>
            <div class="input-group input-group-sm mb-2">		
                @Html.RadioButtonFor(model => model.Init_Workflow, "Yes", new { id = "rbYes0", @onclick = "$('#Init_WorkflowDetail').hide();$('#lblInit_WorkflowDetail').hide();" })
                @Html.Label("rbYes0", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_Workflow, "No", new { id = "rbNo0", @onclick = "$('#Init_WorkflowDetail').show();$('#lblInit_WorkflowDetail').show();" })
                @Html.Label("rbNo0", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_WorkflowDetail" id="lblInit_WorkflowDetail" class="col-form-label-sm">If NO, explain details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_WorkflowDetail)" name="@Html.NameFor(model => model.Init_WorkflowDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_WorkflowDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">If a POC was created, what are the results?</label>
            <div class="input-group input-group-sm mb-2">
                @Html.RadioButtonFor(model => model.Init_POCResults, "Yes", new { id = "rbYes1", @onclick = "$('#Init_POCResultsDetail').show();$('#lblInit_POCResultsDetail').show();" })
                @Html.Label("rbYes1", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_POCResults, "No", new { id = "rbNo1", @onclick = "$('#Init_POCResultsDetail').hide();$('#lblInit_POCResultsDetail').hide();" })
                @Html.Label("rbNo1", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_POCResultsDetail" id="lblInit_POCResultsDetail" class="col-form-label-sm">If yes, provide details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_POCResultsDetail)" name="@Html.NameFor(model => model.Init_POCResultsDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_POCResultsDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">Is there any interaction with another iPipeline product?</label>
            <div class="input-group input-group-sm mb-2">
                @Html.RadioButtonFor(model => model.Init_IPProduct, "Yes", new { id = "rbYes2", @onclick = "$('#Init_IPProductDetail').show();$('#lblInit_IPProductDetail').show();" })
                @Html.Label("rbYes2", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_IPProduct, "No", new { id = "rbNo2", @onclick = "$('#Init_IPProductDetail').hide();$('#lblInit_IPProductDetail').hide();" })
                @Html.Label("rbNo2", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_IPProductDetail" id="lblInit_IPProductDetail" class="col-form-label-sm">If yes, explain details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_IPProductDetail)" name="@Html.NameFor(model => model.Init_IPProductDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_IPProductDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">Are all gaps found during initial review resolved or planned for?</label>
            <div class="input-group input-group-sm mb-2">
                @Html.RadioButtonFor(model => model.Init_Gaps, "Yes", new { id = "rbYes3" })
                @Html.Label("rbYes3", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_Gaps, "No", new { id = "rbNo3" })
                @Html.Label("rbNo3", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_GapsDetail" id="lblInit_GapsDetail" class="col-form-label-sm">Explain details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_GapsDetail)" name="@Html.NameFor(model => model.Init_GapsDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_GapsDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">Were integration requirements (security, methods, technologies, etc.) decided and presented?</label>
            <div class="input-group input-group-sm mb-2">
                @Html.RadioButtonFor(model => model.Init_IntegrationReq, "Yes", new { id = "rbYes4" })
                @Html.Label("rbYes4", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_IntegrationReq, "No", new { id = "rbNo4" })
                @Html.Label("rbNo4", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_IntegrationReqDetail" id="lblInit_IntegrationReqDetail" class="col-form-label-sm">Explain details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_IntegrationReqDetail)" name="@Html.NameFor(model => model.Init_IntegrationReqDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_IntegrationReqDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <div>
            <label class="col-form-label-sm">Was a UX decided and presented?</label>
            <div class="input-group input-group-sm mb-2">
                @Html.RadioButtonFor(model => model.Init_UX, "Yes", new { id = "rbYes5" })
                @Html.Label("rbYes5", "Yes", new { @class = "col-form-label-sm" })
                @Html.RadioButtonFor(model => model.Init_UX, "No", new { id = "rbNo5" })
                @Html.Label("rbNo5", "No", new { @class = "col-form-label-sm" })
            </div>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_UXDetail" id="lblInit_UXDetail" class="col-form-label-sm">Explain details.</label>
        <div class="input-group input-group-sm mb-1">
            <textarea id="@Html.IdFor(model => model.Init_UXDetail)" name="@Html.NameFor(model => model.Init_UXDetail)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_UXDetail)</textarea>
        </div>
    </div>
</div>

<div class="two fields">
    <div class="eight wide field">
        <label for="Init_AdditionalCosts">Expected Additional Costs</label>
        <div class="ui labeled input">
            <label for="Init_AdditionalCosts" class="ui ltgray label"><i class="icon money"></i></label>
            <textarea id="@Html.IdFor(model => model.Init_AdditionalCosts)" name="@Html.NameFor(model => model.Init_AdditionalCosts)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_AdditionalCosts)</textarea>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_ItemsNeeded" class="col-form-label-sm">Items Needed for Implementation Review</label>
        <div class="ui labeled input">
            <label for="Init_ItemsNeeded" class="ui ltgray label"><i class="icon list"></i></label>
            <textarea id="@Html.IdFor(model => model.Init_ItemsNeeded)" name="@Html.NameFor(model => model.Init_ItemsNeeded)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_ItemsNeeded)</textarea>
        </div>
    </div>
</div>
<div class="two fields">
    <div class="eight wide field">
        <label for="Init_JIRAs" class="col-form-label-sm">JIRAs</label>
        <div class="ui labeled input">
            <label for="Init_JIRAs" class="ui ltgray label"><i class="icon industry md"></i></label>
            <textarea id="@Html.IdFor(model => model.Init_JIRAs)" name="@Html.NameFor(model => model.Init_JIRAs)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_JIRAs)</textarea>
        </div>
    </div>
    <div class="eight wide field">
        <label for="Init_Notes" class="col-form-label-sm">Notes</label>
        <div class="ui labeled input">
            <label for="Init_Notes" class="ui ltgray label"><i class="icon copy md"></i></label>
            <textarea id="@Html.IdFor(model => model.Init_Notes)" name="@Html.NameFor(model => model.Init_Notes)" class="form-control" rows="2" autocomplete="off">@Html.Raw(Model.Init_Notes)</textarea>
        </div>
    </div>
</div>
